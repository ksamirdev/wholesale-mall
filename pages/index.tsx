import Advertisement from "@/components/Advertisement";
import Navbar from "@/components/Navbar";
import ProductsCard from "@/components/ProductsCard";
import { Response } from "@/types/API";
import { Product } from "@/types/Product";
import { useInfiniteQuery } from "@tanstack/react-query";
import axios from "axios";
import Head from "next/head";
import { AiOutlineLoading3Quarters } from "react-icons/ai";

export default function Home() {
  const fetchData = ({ page = 0 }) =>
    axios.get(`/api/products?page=${page}&limit=10`).then((d) => d.data);

  const { isLoading, data } = useInfiniteQuery<Response>({
    queryKey: ["products"],
    queryFn: (ctx) => fetchData({ page: ctx.pageParam }),
    refetchOnWindowFocus: false,
    getNextPageParam: (lastPage, allPages) =>
      lastPage.hasMore ? lastPage.nextPage : undefined,
  });

  return (
    <div className="h-screen w-screen bg-tertiary">
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="mx-5 pt-5 flex flex-col gap-5 mb-5">
        <Navbar />
        <Advertisement />

        <div className="flex flex-col bg-quaternary p-5 rounded-2xl">
          {isLoading ? (
            <AiOutlineLoading3Quarters
              size="40"
              className="fill-secondary self-center"
            />
          ) : (
            <div>
              {data?.pages.map((page, i: number) => (
                <div
                  key={i}
                  className="grid grid-cols-4 items-center place-items-center gap-10"
                >
                  {page.results.map((d: Product, i: number) => (
                    <ProductsCard key={i} {...d} />
                  ))}
                </div>
              ))}
            </div>
          )}
        </div>
      </main>
    </div>
  );
}
